const axios = require('axios');

async function testAdminAPI() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∞–¥–º–∏–Ω–∫–∏...');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º health check
    const healthResponse = await axios.get('http://localhost:8000/health');
    console.log('‚úÖ Health check:', healthResponse.data.status);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–Ω—ã –≤–µ—Ä–Ω—É—Ç—å 401)
    const endpoints = [
      '/api/analytics/overview',
      '/api/requests',
      '/api/secrets'
    ];
    
    for (const endpoint of endpoints) {
      try {
        const response = await axios.get(`http://localhost:8000${endpoint}`);
        console.log(`‚ùå ${endpoint} - –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ —Ç–æ–∫–µ–Ω–∞`);
      } catch (error) {
        if (error.response?.status === 401) {
          console.log(`‚úÖ ${endpoint} - –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ç—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é`);
        } else {
          console.log(`‚ùå ${endpoint} - –æ—à–∏–±–∫–∞:`, error.response?.status);
        }
      }
    }
    
    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('- API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    console.log('- –ü—Ä–æ–±–ª–µ–º–∞ –≤ —Ç–æ–º, —á—Ç–æ –Ω—É–∂–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω —Å –∞–¥–º–∏–Ω—Å–∫–∏–º–∏ –ø—Ä–∞–≤–∞–º–∏');
    console.log('- –†–µ—à–µ–Ω–∏–µ: –æ—á–∏—Å—Ç–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –∏ –≤–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

testAdminAPI();
